name: Create Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (x.y.z-abcN e.g. 4.5.6-beta1)'
        required: true
      real_op:
        description: 'Do the real work, not just preview'
        type: boolean
        default: false
        required: true
    

jobs:
  preparation:
    runs-on: ubuntu-latest

    steps:
      - name: Check for admin-ui-assets tag
        if: github.event.repository.name == 'oss'
        uses: octokit/request-action@v2.x
        with:
          owner: ibexa
          repo: admin-ui-assets
          route: /repos/{owner}/{repo}/contents/package.json?ref=v${{ inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.TRAVIS_GITHUB_TOKEN }}
  
  action:
    needs: preparation
    runs-on: ubuntu-latest
    
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Install sponge
        run: |
          sudo apt-get install -y moreutils

      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
          extensions: pdo_sqlite, gd
          tools: cs2pr

      - uses: actions/checkout@v3

      - name: Get release information
        uses: octokit/request-action@v2.x
        id: release
        with:
          owner: ibexa
          repo: release-maker
          route: /repos/{owner}/{repo}/contents/releases/${{ inputs.version }}/release.json
        env:
          GITHUB_TOKEN: ${{ secrets.TRAVIS_GITHUB_TOKEN }}

      - name: Process release information
        run: |
          cat > input.json <<'EOF'
          ${{ steps.release.outputs.data }}
          EOF
          jq -r '.["content"]' input.json | base64 --decode | jq -c . > release.json
          jq -s '[ .[][] | { (.packageName): (.targetVersion) } ] | add' release.json

      - name: Set minimum stability (only if beta/rc)
        if: contains(inputs.version, '-beta') || contains(inputs.version, '-rc')
        run: |

      - name: Patch parent version for OSS
        if: github.event.repository.name == 'oss'
        run: jq '.require["ibexa/admin-ui-assets"] |= "${{ inputs.version }}"' composer.json | sponge composer.json
      - name: Patch parent version for Content
        if: github.event.repository.name == 'content'
        run: jq '.require["ibexa/oss"] |= "${{ inputs.version }}"' composer.json | sponge composer.json
      - name: Patch parent version for Experience
        if: github.event.repository.name == 'experience'
        run: jq '.require["ibexa/content"] |= "${{ inputs.version }}"' composer.json | sponge composer.json
      - name: Patch parent version for Commerce
        if: github.event.repository.name == 'commerce'
        run: jq '.require["ibexa/experience"] |= "${{ inputs.version }}"' composer.json | sponge composer.json

      - name: debug
        run: |
          jq --version
          cat composer.json
          cat release.json

      - name: Patch composer require versions
        run: |
          jq --argfile release release.json '
            .require |= (
              to_entries | 
              map({
                key: .key,
                value: (if ($release[.key]) then $release[.key] else .value end)
              }) | from_entries
            )
          ' composer.json > composer.tmp
          mv composer.tmp composer.json

      - name: Reformat composer.json
        run: cat composer.json | unexpand -t2 | expand -t4 | sponge composer.json

      - name: debug
        run: cat composer.json

      - name: Commit files
        if: inputs.real_op
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "[composer] Set dependencies for ${{ inputs.version }} release + .lock"

      - name: Push changes
        if: inputs.real_op
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
